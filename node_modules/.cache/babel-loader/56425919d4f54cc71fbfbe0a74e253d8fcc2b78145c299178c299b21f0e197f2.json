{"ast":null,"code":"'use strict';\n\n/* global __resourceQuery WorkerGlobalScope self */\n/* eslint prefer-destructuring: off */\nvar url = require('url');\nvar stripAnsi = require('strip-ansi');\nvar log = require('loglevel').getLogger('webpack-dev-server');\nvar socket = require('./socket');\nvar overlay = require('./overlay');\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to find the current script,\n  // but is not supported in all browsers.\n  if (document.currentScript) {\n    return document.currentScript.getAttribute('src');\n  }\n  // Fall back to getting all scripts in the document.\n  var scriptElements = document.scripts || [];\n  var currentScript = scriptElements[scriptElements.length - 1];\n  if (currentScript) {\n    return currentScript.getAttribute('src');\n  }\n  // Fail as there was no script to use.\n  throw new Error('[WDS] Failed to get current script source.');\n}\nvar urlParts = void 0;\nvar hotReload = true;\nif (typeof window !== 'undefined') {\n  var qs = window.location.search.toLowerCase();\n  hotReload = qs.indexOf('hotreload=false') === -1;\n}\nif (typeof __resourceQuery === 'string' && __resourceQuery) {\n  // If this bundle is inlined, use the resource query to get the correct url.\n  urlParts = url.parse(__resourceQuery.substr(1));\n} else {\n  // Else, get the url from the <script> this file was called with.\n  var scriptHost = getCurrentScriptSource();\n  // eslint-disable-next-line no-useless-escape\n  scriptHost = scriptHost.replace(/\\/[^\\/]+$/, '');\n  urlParts = url.parse(scriptHost || '/', false, true);\n}\nif (!urlParts.port || urlParts.port === '0') {\n  urlParts.port = self.location.port;\n}\nvar _hot = false;\nvar initial = true;\nvar currentHash = '';\nvar useWarningOverlay = false;\nvar useErrorOverlay = false;\nvar useProgress = false;\nvar INFO = 'info';\nvar WARNING = 'warning';\nvar ERROR = 'error';\nvar NONE = 'none';\n\n// Set the default log level\nlog.setDefaultLevel(INFO);\n\n// Send messages to the outside, so plugins can consume it.\nfunction sendMsg(type, data) {\n  if (typeof self !== 'undefined' && (typeof WorkerGlobalScope === 'undefined' || !(self instanceof WorkerGlobalScope))) {\n    self.postMessage({\n      type: 'webpack' + type,\n      data: data\n    }, '*');\n  }\n}\nvar onSocketMsg = {\n  hot: function hot() {\n    _hot = true;\n    log.info('[WDS] Hot Module Replacement enabled.');\n  },\n  invalid: function invalid() {\n    log.info('[WDS] App updated. Recompiling...');\n    // fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\n    sendMsg('Invalid');\n  },\n  hash: function hash(_hash) {\n    currentHash = _hash;\n  },\n  'still-ok': function stillOk() {\n    log.info('[WDS] Nothing changed.');\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\n    sendMsg('StillOk');\n  },\n  'log-level': function logLevel(level) {\n    var hotCtx = require.context('webpack/hot', false, /^\\.\\/log$/);\n    if (hotCtx.keys().indexOf('./log') !== -1) {\n      hotCtx('./log').setLogLevel(level);\n    }\n    switch (level) {\n      case INFO:\n      case ERROR:\n        log.setLevel(level);\n        break;\n      case WARNING:\n        // loglevel's warning name is different from webpack's\n        log.setLevel('warn');\n        break;\n      case NONE:\n        log.disableAll();\n        break;\n      default:\n        log.error('[WDS] Unknown clientLogLevel \\'' + level + '\\'');\n    }\n  },\n  overlay: function overlay(value) {\n    if (typeof document !== 'undefined') {\n      if (typeof value === 'boolean') {\n        useWarningOverlay = false;\n        useErrorOverlay = value;\n      } else if (value) {\n        useWarningOverlay = value.warnings;\n        useErrorOverlay = value.errors;\n      }\n    }\n  },\n  progress: function progress(_progress) {\n    if (typeof document !== 'undefined') {\n      useProgress = _progress;\n    }\n  },\n  'progress-update': function progressUpdate(data) {\n    if (useProgress) log.info('[WDS] ' + data.percent + '% - ' + data.msg + '.');\n  },\n  ok: function ok() {\n    sendMsg('Ok');\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\n    if (initial) return initial = false; // eslint-disable-line no-return-assign\n    reloadApp();\n  },\n  'content-changed': function contentChanged() {\n    log.info('[WDS] Content base changed. Reloading...');\n    self.location.reload();\n  },\n  warnings: function warnings(_warnings) {\n    log.warn('[WDS] Warnings while compiling.');\n    var strippedWarnings = _warnings.map(function (warning) {\n      return stripAnsi(warning);\n    });\n    sendMsg('Warnings', strippedWarnings);\n    for (var i = 0; i < strippedWarnings.length; i++) {\n      log.warn(strippedWarnings[i]);\n    }\n    if (useWarningOverlay) overlay.showMessage(_warnings);\n    if (initial) return initial = false; // eslint-disable-line no-return-assign\n    reloadApp();\n  },\n  errors: function errors(_errors) {\n    log.error('[WDS] Errors while compiling. Reload prevented.');\n    var strippedErrors = _errors.map(function (error) {\n      return stripAnsi(error);\n    });\n    sendMsg('Errors', strippedErrors);\n    for (var i = 0; i < strippedErrors.length; i++) {\n      log.error(strippedErrors[i]);\n    }\n    if (useErrorOverlay) overlay.showMessage(_errors);\n    initial = false;\n  },\n  error: function error(_error) {\n    log.error(_error);\n  },\n  close: function close() {\n    log.error('[WDS] Disconnected!');\n    sendMsg('Close');\n  }\n};\nvar hostname = urlParts.hostname;\nvar protocol = urlParts.protocol;\n\n// check ipv4 and ipv6 `all hostname`\nif (hostname === '0.0.0.0' || hostname === '::') {\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n  // eslint-disable-next-line no-bitwise\n  if (self.location.hostname && !!~self.location.protocol.indexOf('http')) {\n    hostname = self.location.hostname;\n  }\n}\n\n// `hostname` can be empty when the script path is relative. In that case, specifying\n// a protocol would result in an invalid URL.\n// When https is used in the app, secure websockets are always necessary\n// because the browser doesn't accept non-secure websockets.\nif (hostname && (self.location.protocol === 'https:' || urlParts.hostname === '0.0.0.0')) {\n  protocol = self.location.protocol;\n}\nvar socketUrl = url.format({\n  protocol: protocol,\n  auth: urlParts.auth,\n  hostname: hostname,\n  port: urlParts.port,\n  pathname: urlParts.path == null || urlParts.path === '/' ? '/sockjs-node' : urlParts.path\n});\nsocket(socketUrl, onSocketMsg);\nvar isUnloading = false;\nself.addEventListener('beforeunload', function () {\n  isUnloading = true;\n});\nfunction reloadApp() {\n  if (isUnloading || !hotReload) {\n    return;\n  }\n  if (_hot) {\n    log.info('[WDS] App hot update...');\n    // eslint-disable-next-line global-require\n    var hotEmitter = require('webpack/hot/emitter');\n    hotEmitter.emit('webpackHotUpdate', currentHash);\n    if (typeof self !== 'undefined' && self.window) {\n      // broadcast update to window\n      self.postMessage('webpackHotUpdate' + currentHash, '*');\n    }\n  } else {\n    var rootWindow = self;\n    // use parent window for reload (in case we're in an iframe with no valid src)\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== 'about:') {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info('[WDS] App updated. Reloading...');\n    rootWindow.location.reload();\n  }\n}","map":{"version":3,"names":["url","require","stripAnsi","log","getLogger","socket","overlay","getCurrentScriptSource","document","currentScript","getAttribute","scriptElements","scripts","length","Error","urlParts","hotReload","window","qs","location","search","toLowerCase","indexOf","__resourceQuery","parse","substr","scriptHost","replace","port","self","_hot","initial","currentHash","useWarningOverlay","useErrorOverlay","useProgress","INFO","WARNING","ERROR","NONE","setDefaultLevel","sendMsg","type","data","WorkerGlobalScope","postMessage","onSocketMsg","hot","info","invalid","clear","hash","_hash","stillOk","logLevel","level","hotCtx","context","keys","setLogLevel","setLevel","disableAll","error","value","warnings","errors","progress","_progress","progressUpdate","percent","msg","ok","reloadApp","contentChanged","reload","_warnings","warn","strippedWarnings","map","warning","i","showMessage","_errors","strippedErrors","_error","close","hostname","protocol","socketUrl","format","auth","pathname","path","isUnloading","addEventListener","hotEmitter","emit","rootWindow","intervalId","setInterval","applyReload","parent","clearInterval"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/webpack-dev-server/client/index.js"],"sourcesContent":["'use strict';\r\n\r\n/* global __resourceQuery WorkerGlobalScope self */\r\n/* eslint prefer-destructuring: off */\r\n\r\nvar url = require('url');\r\nvar stripAnsi = require('strip-ansi');\r\nvar log = require('loglevel').getLogger('webpack-dev-server');\r\nvar socket = require('./socket');\r\nvar overlay = require('./overlay');\r\n\r\nfunction getCurrentScriptSource() {\r\n  // `document.currentScript` is the most accurate way to find the current script,\r\n  // but is not supported in all browsers.\r\n  if (document.currentScript) {\r\n    return document.currentScript.getAttribute('src');\r\n  }\r\n  // Fall back to getting all scripts in the document.\r\n  var scriptElements = document.scripts || [];\r\n  var currentScript = scriptElements[scriptElements.length - 1];\r\n  if (currentScript) {\r\n    return currentScript.getAttribute('src');\r\n  }\r\n  // Fail as there was no script to use.\r\n  throw new Error('[WDS] Failed to get current script source.');\r\n}\r\n\r\nvar urlParts = void 0;\r\nvar hotReload = true;\r\nif (typeof window !== 'undefined') {\r\n  var qs = window.location.search.toLowerCase();\r\n  hotReload = qs.indexOf('hotreload=false') === -1;\r\n}\r\nif (typeof __resourceQuery === 'string' && __resourceQuery) {\r\n  // If this bundle is inlined, use the resource query to get the correct url.\r\n  urlParts = url.parse(__resourceQuery.substr(1));\r\n} else {\r\n  // Else, get the url from the <script> this file was called with.\r\n  var scriptHost = getCurrentScriptSource();\r\n  // eslint-disable-next-line no-useless-escape\r\n  scriptHost = scriptHost.replace(/\\/[^\\/]+$/, '');\r\n  urlParts = url.parse(scriptHost || '/', false, true);\r\n}\r\n\r\nif (!urlParts.port || urlParts.port === '0') {\r\n  urlParts.port = self.location.port;\r\n}\r\n\r\nvar _hot = false;\r\nvar initial = true;\r\nvar currentHash = '';\r\nvar useWarningOverlay = false;\r\nvar useErrorOverlay = false;\r\nvar useProgress = false;\r\n\r\nvar INFO = 'info';\r\nvar WARNING = 'warning';\r\nvar ERROR = 'error';\r\nvar NONE = 'none';\r\n\r\n// Set the default log level\r\nlog.setDefaultLevel(INFO);\r\n\r\n// Send messages to the outside, so plugins can consume it.\r\nfunction sendMsg(type, data) {\r\n  if (typeof self !== 'undefined' && (typeof WorkerGlobalScope === 'undefined' || !(self instanceof WorkerGlobalScope))) {\r\n    self.postMessage({\r\n      type: 'webpack' + type,\r\n      data: data\r\n    }, '*');\r\n  }\r\n}\r\n\r\nvar onSocketMsg = {\r\n  hot: function hot() {\r\n    _hot = true;\r\n    log.info('[WDS] Hot Module Replacement enabled.');\r\n  },\r\n  invalid: function invalid() {\r\n    log.info('[WDS] App updated. Recompiling...');\r\n    // fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\r\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\r\n    sendMsg('Invalid');\r\n  },\r\n  hash: function hash(_hash) {\r\n    currentHash = _hash;\r\n  },\r\n\r\n  'still-ok': function stillOk() {\r\n    log.info('[WDS] Nothing changed.');\r\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\r\n    sendMsg('StillOk');\r\n  },\r\n  'log-level': function logLevel(level) {\r\n    var hotCtx = require.context('webpack/hot', false, /^\\.\\/log$/);\r\n    if (hotCtx.keys().indexOf('./log') !== -1) {\r\n      hotCtx('./log').setLogLevel(level);\r\n    }\r\n    switch (level) {\r\n      case INFO:\r\n      case ERROR:\r\n        log.setLevel(level);\r\n        break;\r\n      case WARNING:\r\n        // loglevel's warning name is different from webpack's\r\n        log.setLevel('warn');\r\n        break;\r\n      case NONE:\r\n        log.disableAll();\r\n        break;\r\n      default:\r\n        log.error('[WDS] Unknown clientLogLevel \\'' + level + '\\'');\r\n    }\r\n  },\r\n  overlay: function overlay(value) {\r\n    if (typeof document !== 'undefined') {\r\n      if (typeof value === 'boolean') {\r\n        useWarningOverlay = false;\r\n        useErrorOverlay = value;\r\n      } else if (value) {\r\n        useWarningOverlay = value.warnings;\r\n        useErrorOverlay = value.errors;\r\n      }\r\n    }\r\n  },\r\n  progress: function progress(_progress) {\r\n    if (typeof document !== 'undefined') {\r\n      useProgress = _progress;\r\n    }\r\n  },\r\n\r\n  'progress-update': function progressUpdate(data) {\r\n    if (useProgress) log.info('[WDS] ' + data.percent + '% - ' + data.msg + '.');\r\n  },\r\n  ok: function ok() {\r\n    sendMsg('Ok');\r\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\r\n    if (initial) return initial = false; // eslint-disable-line no-return-assign\r\n    reloadApp();\r\n  },\r\n\r\n  'content-changed': function contentChanged() {\r\n    log.info('[WDS] Content base changed. Reloading...');\r\n    self.location.reload();\r\n  },\r\n  warnings: function warnings(_warnings) {\r\n    log.warn('[WDS] Warnings while compiling.');\r\n    var strippedWarnings = _warnings.map(function (warning) {\r\n      return stripAnsi(warning);\r\n    });\r\n    sendMsg('Warnings', strippedWarnings);\r\n    for (var i = 0; i < strippedWarnings.length; i++) {\r\n      log.warn(strippedWarnings[i]);\r\n    }\r\n    if (useWarningOverlay) overlay.showMessage(_warnings);\r\n\r\n    if (initial) return initial = false; // eslint-disable-line no-return-assign\r\n    reloadApp();\r\n  },\r\n  errors: function errors(_errors) {\r\n    log.error('[WDS] Errors while compiling. Reload prevented.');\r\n    var strippedErrors = _errors.map(function (error) {\r\n      return stripAnsi(error);\r\n    });\r\n    sendMsg('Errors', strippedErrors);\r\n    for (var i = 0; i < strippedErrors.length; i++) {\r\n      log.error(strippedErrors[i]);\r\n    }\r\n    if (useErrorOverlay) overlay.showMessage(_errors);\r\n    initial = false;\r\n  },\r\n  error: function error(_error) {\r\n    log.error(_error);\r\n  },\r\n  close: function close() {\r\n    log.error('[WDS] Disconnected!');\r\n    sendMsg('Close');\r\n  }\r\n};\r\n\r\nvar hostname = urlParts.hostname;\r\nvar protocol = urlParts.protocol;\r\n\r\n// check ipv4 and ipv6 `all hostname`\r\nif (hostname === '0.0.0.0' || hostname === '::') {\r\n  // why do we need this check?\r\n  // hostname n/a for file protocol (example, when using electron, ionic)\r\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\r\n  // eslint-disable-next-line no-bitwise\r\n  if (self.location.hostname && !!~self.location.protocol.indexOf('http')) {\r\n    hostname = self.location.hostname;\r\n  }\r\n}\r\n\r\n// `hostname` can be empty when the script path is relative. In that case, specifying\r\n// a protocol would result in an invalid URL.\r\n// When https is used in the app, secure websockets are always necessary\r\n// because the browser doesn't accept non-secure websockets.\r\nif (hostname && (self.location.protocol === 'https:' || urlParts.hostname === '0.0.0.0')) {\r\n  protocol = self.location.protocol;\r\n}\r\n\r\nvar socketUrl = url.format({\r\n  protocol: protocol,\r\n  auth: urlParts.auth,\r\n  hostname: hostname,\r\n  port: urlParts.port,\r\n  pathname: urlParts.path == null || urlParts.path === '/' ? '/sockjs-node' : urlParts.path\r\n});\r\n\r\nsocket(socketUrl, onSocketMsg);\r\n\r\nvar isUnloading = false;\r\nself.addEventListener('beforeunload', function () {\r\n  isUnloading = true;\r\n});\r\n\r\nfunction reloadApp() {\r\n  if (isUnloading || !hotReload) {\r\n    return;\r\n  }\r\n  if (_hot) {\r\n    log.info('[WDS] App hot update...');\r\n    // eslint-disable-next-line global-require\r\n    var hotEmitter = require('webpack/hot/emitter');\r\n    hotEmitter.emit('webpackHotUpdate', currentHash);\r\n    if (typeof self !== 'undefined' && self.window) {\r\n      // broadcast update to window\r\n      self.postMessage('webpackHotUpdate' + currentHash, '*');\r\n    }\r\n  } else {\r\n    var rootWindow = self;\r\n    // use parent window for reload (in case we're in an iframe with no valid src)\r\n    var intervalId = self.setInterval(function () {\r\n      if (rootWindow.location.protocol !== 'about:') {\r\n        // reload immediately if protocol is valid\r\n        applyReload(rootWindow, intervalId);\r\n      } else {\r\n        rootWindow = rootWindow.parent;\r\n        if (rootWindow.parent === rootWindow) {\r\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\r\n          applyReload(rootWindow, intervalId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function applyReload(rootWindow, intervalId) {\r\n    clearInterval(intervalId);\r\n    log.info('[WDS] App updated. Reloading...');\r\n    rootWindow.location.reload();\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}