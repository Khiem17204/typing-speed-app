{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tung0\\\\OneDrive\\\\Documents\\\\typing-speed-app\\\\src\\\\components\\\\body\\\\Typing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { generate } from 'random-words';\nimport { toBeChecked } from '@testing-library/jest-dom/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Typing(_ref) {\n  _s();\n  let {\n    numWords\n  } = _ref;\n  const [words, setWords] = useState([]);\n  const [currInput, setCurrInput] = useState([]);\n  const [char, setChar] = useState(\"\");\n  const [currWord, setCurrWord] = useState(0);\n  const [currIndex, setCurrIndex] = useState(-1);\n  const [currLineIndex, setCurrLineIndex] = useState(0);\n  const [visiblePrompts, setVisiblePrompts] = useState(3);\n  useEffect(() => {\n    setWords(generateWords());\n  }, [numWords, visiblePrompts]);\n  function generateWords() {\n    const allWords = new Array(visiblePrompts * numWords).fill(null).map(() => generate());\n    return allWords.slice(0, visiblePrompts * numWords);\n  }\n  let keyCode = 0;\n  const handleKeyDown = event => {\n    keyCode = event.keyCode;\n    if (keyCode === 32) {\n      setCurrInput([]);\n      setCurrWord(prevState => prevState + 1);\n      setCurrIndex(-1);\n      setChar(\"space\");\n    } else if (keyCode === 8) {\n      if (currInput !== []) {\n        setCurrInput(currInput => currInput.slice(0, -1));\n        setCurrIndex(index => {\n          if (index >= 0) {\n            return index - 1;\n          } else {\n            return -1;\n          }\n        });\n        setChar(\"backspace\");\n      }\n    } else if (keyCode >= 65 && keyCode <= 90) {\n      let chrCode = keyCode - 48 * Math.floor(keyCode / 48);\n      let chr = String.fromCharCode(96 <= keyCode ? chrCode : keyCode);\n      setChar(chr.toLowerCase());\n      setCurrInput(Input => [...Input, chr.toLowerCase()]);\n      setCurrIndex(Index => Index + 1);\n    }\n  };\n  function injectExtraWords(words, currIndex, currWord, currInput, char) {\n    var _words$currWord, _words$currWord2;\n    let space = document.createElement(\"span\");\n    space.appendChild(document.createTextNode(\" \"));\n    if (char !== \"backspace\" && currIndex >= ((_words$currWord = words[currWord]) === null || _words$currWord === void 0 ? void 0 : _words$currWord.length)) {\n      let element = document.createElement(\"span\");\n      element.key = currIndex + 1;\n      element.id = `${currWord}-${currIndex}`;\n      element.className = \"word-incorrect\";\n      element.onKeyDown = \"handleKeyDown\";\n      element.appendChild(document.createTextNode(`${currInput[currInput.length - 1]}`));\n      const currWordElement = document.getElementById(currWord);\n      if (currWordElement) {\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.appendChild(element);\n        currWordElement.appendChild(space);\n      }\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).appendChild(element);\n      document.getElementById(currWord).appendChild(space);\n    } else if (char === \"backspace\" && currIndex >= ((_words$currWord2 = words[currWord]) === null || _words$currWord2 === void 0 ? void 0 : _words$currWord2.length) - 1) {\n      const currWordElement = document.getElementById(currWord);\n      if (currWordElement) {\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.appendChild(space);\n      }\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).appendChild(space);\n    }\n  }\n  function changeColor() {\n    let element = document.getElementById(`${currWord}-${currIndex}`);\n    console.log(currWord, currIndex);\n    if (char === \"backspace\") {\n      let element2 = document.getElementById(`${currWord}-${currIndex + 1}`);\n      if (element2) {\n        element2.className = \"word-unrendered\";\n      }\n    } else {\n      if (element) {\n        element.className = `word-${checkMatch(char)}`;\n      }\n    }\n  }\n  useEffect(() => {\n    injectExtraWords(words, currIndex, currWord, currInput, char);\n  }, [currInput]);\n  useEffect(() => {\n    changeColor();\n  }, [currInput]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    console.log('A key was pressed: ', currInput, char, words[currWord], currIndex);\n  }, [currInput]);\n  function checkMatch(char) {\n    if (currIndex >= words[currWord].length) {\n      return \"redundant\";\n    }\n    if (words[currWord][currIndex] === char) {\n      return \"correct\";\n    } else {\n      return \"incorrect\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing--section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt\",\n        children: words.slice(0, visiblePrompts).map((word, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `${i}`,\n          children: [word.split(\"\").map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            id: `${i}-${idx}`,\n            className: \"word-unrendered\",\n            onKeyDown: handleKeyDown,\n            children: char\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setVisiblePrompts(visiblePrompts + 1),\n      children: \"Show More Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Typing, \"DJtxGTmbbCdHb8RmUWN0HZxWlmo=\");\n_c = Typing;\nvar _c;\n$RefreshReg$(_c, \"Typing\");","map":{"version":3,"names":["React","useState","useEffect","generate","toBeChecked","jsxDEV","_jsxDEV","Typing","_ref","_s","numWords","words","setWords","currInput","setCurrInput","char","setChar","currWord","setCurrWord","currIndex","setCurrIndex","currLineIndex","setCurrLineIndex","visiblePrompts","setVisiblePrompts","generateWords","allWords","Array","fill","map","slice","keyCode","handleKeyDown","event","prevState","index","chrCode","Math","floor","chr","String","fromCharCode","toLowerCase","Input","Index","injectExtraWords","_words$currWord","_words$currWord2","space","document","createElement","appendChild","createTextNode","length","element","key","id","className","onKeyDown","currWordElement","getElementById","removeChild","lastChild","changeColor","console","log","element2","checkMatch","window","addEventListener","removeEventListener","children","word","i","split","idx","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/src/components/body/Typing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { generate } from 'random-words';\r\nimport { toBeChecked } from '@testing-library/jest-dom/matchers';\r\n\r\nexport default function Typing({ numWords }) {\r\n  const [words, setWords] = useState([]);\r\n  const [currInput, setCurrInput] = useState([]);\r\n  const [char, setChar] = useState(\"\");\r\n  const [currWord, setCurrWord] = useState(0);\r\n  const [currIndex, setCurrIndex] = useState(-1);\r\n  const [currLineIndex, setCurrLineIndex] = useState(0);\r\n  const [visiblePrompts, setVisiblePrompts] = useState(3);\r\n\r\n  useEffect(() => {\r\n    setWords(generateWords());\r\n  }, [numWords, visiblePrompts]);\r\n\r\n  function generateWords() {\r\n    const allWords = new Array(visiblePrompts * numWords).fill(null).map(() => generate());\r\n    return allWords.slice(0, visiblePrompts * numWords);\r\n  }\r\n\r\n  let keyCode = 0;\r\n\r\n  const handleKeyDown = (event) => {\r\n    keyCode = event.keyCode;\r\n    if (keyCode === 32) {\r\n      setCurrInput([]);\r\n      setCurrWord(prevState => prevState + 1);\r\n      setCurrIndex(-1);\r\n      setChar(\"space\");\r\n    } else if (keyCode === 8) {\r\n      if (currInput !== []) {\r\n        setCurrInput(currInput => currInput.slice(0, -1));\r\n        setCurrIndex((index) => {\r\n          if (index >= 0) {\r\n            return index - 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        setChar(\"backspace\");\r\n      }\r\n    } else if (keyCode >= 65 && keyCode <= 90) {\r\n      let chrCode = keyCode - 48 * Math.floor(keyCode / 48);\r\n      let chr = String.fromCharCode((96 <= keyCode) ? chrCode : keyCode);\r\n      setChar(chr.toLowerCase());\r\n      setCurrInput(Input => [...Input, chr.toLowerCase()]);\r\n      setCurrIndex(Index => Index + 1);\r\n    }\r\n  };\r\n\r\n  function injectExtraWords(words, currIndex, currWord, currInput, char) {\r\n    let space = document.createElement(\"span\");\r\n    space.appendChild(document.createTextNode(\" \"));\r\n    if (char !== \"backspace\" && currIndex >= words[currWord]?.length) {\r\n      let element = document.createElement(\"span\");\r\n      element.key = currIndex + 1;\r\n      element.id = `${currWord}-${currIndex}`;\r\n      element.className = \"word-incorrect\";\r\n      element.onKeyDown = \"handleKeyDown\";\r\n      element.appendChild(document.createTextNode(`${currInput[currInput.length - 1]}`));\r\n      const currWordElement = document.getElementById(currWord);\r\n      if (currWordElement) {\r\n        currWordElement.removeChild(currWordElement.lastChild);\r\n        currWordElement.appendChild(element);\r\n        currWordElement.appendChild(space);\r\n      }\r\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\r\n      document.getElementById(currWord).appendChild(element);\r\n      document.getElementById(currWord).appendChild(space);\r\n    } else if (char === \"backspace\" && currIndex >= words[currWord]?.length - 1) {\r\n      const currWordElement = document.getElementById(currWord);\r\n      if (currWordElement) {\r\n        currWordElement.removeChild(currWordElement.lastChild);\r\n        currWordElement.removeChild(currWordElement.lastChild);\r\n        currWordElement.appendChild(space);\r\n      }\r\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\r\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\r\n      document.getElementById(currWord).appendChild(space);\r\n    }\r\n  }\r\n\r\n  function changeColor() {\r\n    let element = document.getElementById(`${currWord}-${currIndex}`);\r\n    console.log(currWord, currIndex);\r\n    if (char === \"backspace\") {\r\n      let element2 = document.getElementById(`${currWord}-${currIndex + 1}`);\r\n      if (element2) {\r\n        element2.className = \"word-unrendered\";\r\n      }\r\n    } else {\r\n      if (element) {\r\n        element.className = `word-${checkMatch(char)}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    injectExtraWords(words, currIndex, currWord, currInput, char);\r\n  }, [currInput]);\r\n\r\n  useEffect(() => {\r\n    changeColor();\r\n  }, [currInput]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('A key was pressed: ', currInput, char, words[currWord], currIndex);\r\n  }, [currInput]);\r\n\r\n  function checkMatch(char) {\r\n    if (currIndex >= words[currWord].length) {\r\n      return \"redundant\";\r\n    }\r\n\r\n    if (words[currWord][currIndex] === char) {\r\n      return \"correct\";\r\n    } else {\r\n      return \"incorrect\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='typing--section'>\r\n        <div className=\"prompt\">\r\n          {words.slice(0, visiblePrompts).map((word, i) => (\r\n            <span key={i} id={`${i}`}>\r\n              {word.split(\"\").map((char, idx) => (\r\n                <span key={idx} id={`${i}-${idx}`} className=\"word-unrendered\" onKeyDown={handleKeyDown}>{char}</span>\r\n              ))}\r\n              <span> </span>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button onClick={() => setVisiblePrompts(visiblePrompts + 1)}>Show More Prompts</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}