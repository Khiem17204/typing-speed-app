{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveValue = toHaveValue;\nvar _isEqualWith = _interopRequireDefault(require(\"lodash/isEqualWith\"));\nvar _utils = require(\"./utils\");\nfunction toHaveValue(htmlElement, expectedValue) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveValue, this);\n  if (htmlElement.tagName.toLowerCase() === 'input' && ['checkbox', 'radio'].includes(htmlElement.type)) {\n    throw new Error('input with type=checkbox or type=radio cannot be used with .toHaveValue(). Use .toBeChecked() for type=checkbox or .toHaveFormValues() instead');\n  }\n  const receivedValue = (0, _utils.getSingleElementValue)(htmlElement);\n  const expectsValue = expectedValue !== undefined;\n  let expectedTypedValue = expectedValue;\n  let receivedTypedValue = receivedValue;\n  if (expectedValue == receivedValue && expectedValue !== receivedValue) {\n    expectedTypedValue = `${expectedValue} (${typeof expectedValue})`;\n    receivedTypedValue = `${receivedValue} (${typeof receivedValue})`;\n  }\n  return {\n    pass: expectsValue ? (0, _isEqualWith.default)(receivedValue, expectedValue, _utils.compareArraysAsSet) : Boolean(receivedValue),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      const matcher = this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveValue`, 'element', expectedValue);\n      return (0, _utils.getMessage)(this, matcher, `Expected the element ${to} have value`, expectsValue ? expectedTypedValue : '(any)', 'Received', receivedTypedValue);\n    }\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","toHaveValue","_isEqualWith","_utils","htmlElement","expectedValue","checkHtmlElement","tagName","toLowerCase","includes","type","Error","receivedValue","getSingleElementValue","expectsValue","undefined","expectedTypedValue","receivedTypedValue","pass","default","compareArraysAsSet","Boolean","message","to","isNot","matcher","utils","matcherHint","getMessage"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/@testing-library/jest-dom/dist/to-have-value.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveValue = toHaveValue;\n\nvar _isEqualWith = _interopRequireDefault(require(\"lodash/isEqualWith\"));\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveValue(htmlElement, expectedValue) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveValue, this);\n\n  if (htmlElement.tagName.toLowerCase() === 'input' && ['checkbox', 'radio'].includes(htmlElement.type)) {\n    throw new Error('input with type=checkbox or type=radio cannot be used with .toHaveValue(). Use .toBeChecked() for type=checkbox or .toHaveFormValues() instead');\n  }\n\n  const receivedValue = (0, _utils.getSingleElementValue)(htmlElement);\n  const expectsValue = expectedValue !== undefined;\n  let expectedTypedValue = expectedValue;\n  let receivedTypedValue = receivedValue;\n\n  if (expectedValue == receivedValue && expectedValue !== receivedValue) {\n    expectedTypedValue = `${expectedValue} (${typeof expectedValue})`;\n    receivedTypedValue = `${receivedValue} (${typeof receivedValue})`;\n  }\n\n  return {\n    pass: expectsValue ? (0, _isEqualWith.default)(receivedValue, expectedValue, _utils.compareArraysAsSet) : Boolean(receivedValue),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      const matcher = this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveValue`, 'element', expectedValue);\n      return (0, _utils.getMessage)(this, matcher, `Expected the element ${to} have value`, expectsValue ? expectedTypedValue : '(any)', 'Received', receivedTypedValue);\n    }\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpFC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGA,WAAW;AAEjC,IAAIC,YAAY,GAAGP,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAExE,IAAIO,MAAM,GAAGP,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASK,WAAWA,CAACG,WAAW,EAAEC,aAAa,EAAE;EAC/C,CAAC,CAAC,EAAEF,MAAM,CAACG,gBAAgB,EAAEF,WAAW,EAAEH,WAAW,EAAE,IAAI,CAAC;EAE5D,IAAIG,WAAW,CAACG,OAAO,CAACC,WAAW,CAAC,CAAC,KAAK,OAAO,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAACC,QAAQ,CAACL,WAAW,CAACM,IAAI,CAAC,EAAE;IACrG,MAAM,IAAIC,KAAK,CAAC,gJAAgJ,CAAC;EACnK;EAEA,MAAMC,aAAa,GAAG,CAAC,CAAC,EAAET,MAAM,CAACU,qBAAqB,EAAET,WAAW,CAAC;EACpE,MAAMU,YAAY,GAAGT,aAAa,KAAKU,SAAS;EAChD,IAAIC,kBAAkB,GAAGX,aAAa;EACtC,IAAIY,kBAAkB,GAAGL,aAAa;EAEtC,IAAIP,aAAa,IAAIO,aAAa,IAAIP,aAAa,KAAKO,aAAa,EAAE;IACrEI,kBAAkB,GAAI,GAAEX,aAAc,KAAI,OAAOA,aAAc,GAAE;IACjEY,kBAAkB,GAAI,GAAEL,aAAc,KAAI,OAAOA,aAAc,GAAE;EACnE;EAEA,OAAO;IACLM,IAAI,EAAEJ,YAAY,GAAG,CAAC,CAAC,EAAEZ,YAAY,CAACiB,OAAO,EAAEP,aAAa,EAAEP,aAAa,EAAEF,MAAM,CAACiB,kBAAkB,CAAC,GAAGC,OAAO,CAACT,aAAa,CAAC;IAChIU,OAAO,EAAEA,CAAA,KAAM;MACb,MAAMC,EAAE,GAAG,IAAI,CAACC,KAAK,GAAG,QAAQ,GAAG,IAAI;MACvC,MAAMC,OAAO,GAAG,IAAI,CAACC,KAAK,CAACC,WAAW,CAAE,GAAE,IAAI,CAACH,KAAK,GAAG,MAAM,GAAG,EAAG,cAAa,EAAE,SAAS,EAAEnB,aAAa,CAAC;MAC3G,OAAO,CAAC,CAAC,EAAEF,MAAM,CAACyB,UAAU,EAAE,IAAI,EAAEH,OAAO,EAAG,wBAAuBF,EAAG,aAAY,EAAET,YAAY,GAAGE,kBAAkB,GAAG,OAAO,EAAE,UAAU,EAAEC,kBAAkB,CAAC;IACpK;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}