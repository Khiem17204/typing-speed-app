{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tung0\\\\OneDrive\\\\Documents\\\\typing-speed-app\\\\src\\\\components\\\\body\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Countdown from './Countdown';\nimport Typing from './Typing';\nimport Controller from './Controller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n  const [seconds, setTime] = useState(0);\n  const [words, setWords] = useState(60);\n  const normal = 60;\n  const [started, setStarted] = useState(false);\n  const [selectedMode, setSelectedMode] = useState('');\n  useEffect(() => {\n    let interval;\n    if (started && seconds > 0) {\n      interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime === 0) {\n            clearInterval(interval);\n            setStarted(false);\n            return 0;\n          } else {\n            return prevTime - 1;\n          }\n        });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [started, seconds]);\n  const handleKeyDown = event => {\n    let keyCode = event.keyCode;\n    if (!started && keyCode >= 65 && keyCode <= 90) {\n      setStarted(true);\n    }\n    window.removeEventListener('keydown', handleKeyDown);\n  };\n  window.addEventListener('keydown', handleKeyDown);\n  const handleModeChange = mode => {\n    setSelectedMode(mode);\n  };\n  useEffect(() => {\n    if (selectedMode === '30s') {\n      setTime(30);\n      setWords(normal);\n    } else if (selectedMode === '60s') {\n      setTime(60);\n      setWords(normal);\n    } else if (selectedMode === '120s') {\n      setTime(120);\n      setWords(normal);\n    } else if (selectedMode === '60w') {\n      setTime(0);\n      setWords(60);\n    } else if (selectedMode === '120w') {\n      setTime(0);\n      setWords(120);\n    } else if (selectedMode === '180w') {\n      setTime(0);\n      setWords(180);\n    }\n  }, [selectedMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      onModeChange: handleModeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n      time: seconds,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typing, {\n      numWords: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Body, \"gBA/feWzF/C7EQVOGtkKkaG91fI=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","Countdown","Typing","Controller","jsxDEV","_jsxDEV","Body","_s","seconds","setTime","words","setWords","normal","started","setStarted","selectedMode","setSelectedMode","interval","setInterval","prevTime","clearInterval","handleKeyDown","event","keyCode","window","removeEventListener","addEventListener","handleModeChange","mode","className","children","onModeChange","fileName","_jsxFileName","lineNumber","columnNumber","time","onKeyDown","numWords","_c","$RefreshReg$"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/src/components/body/Body.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Countdown from './Countdown';\r\nimport Typing from './Typing';\r\nimport Controller from './Controller';\r\n\r\nexport default function Body() {\r\n    const [seconds, setTime] = useState(0);\r\n    const [words, setWords] = useState(60);\r\n    const normal = 60;\r\n    const [started, setStarted] = useState(false);\r\n    const [selectedMode, setSelectedMode] = useState('');\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        if (started && seconds > 0) {\r\n            interval = setInterval(() => {\r\n                setTime(prevTime => {\r\n                    if (prevTime === 0) {\r\n                        clearInterval(interval);\r\n                        setStarted(false)\r\n                        return 0\r\n                    } else {\r\n                        return prevTime - 1\r\n                    }\r\n                })\r\n            }, 1000)\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [started, seconds])\r\n\r\n\r\n    const handleKeyDown = (event) => {\r\n        let keyCode = event.keyCode\r\n        if (!started && keyCode >= 65 && keyCode <= 90) {\r\n            setStarted(true)\r\n        }\r\n        window.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n    window.addEventListener('keydown', handleKeyDown)\r\n\r\n    const handleModeChange = (mode) => {\r\n        setSelectedMode(mode);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedMode === '30s') {\r\n            setTime(30);\r\n            setWords(normal);\r\n        } else if (selectedMode === '60s') {\r\n            setTime(60);\r\n            setWords(normal);\r\n        } else if (selectedMode === '120s') {\r\n            setTime(120);\r\n            setWords(normal);\r\n        } else if (selectedMode === '60w') {\r\n            setTime(0);\r\n            setWords(60);\r\n        }\r\n        else if (selectedMode === '120w') {\r\n            setTime(0);\r\n            setWords(120);\r\n        } else if (selectedMode === '180w') {\r\n            setTime(0);\r\n            setWords(180);\r\n        }\r\n    }, [selectedMode]);\r\n\r\n    return (\r\n        <div className='main-content'>\r\n            <Controller onModeChange={handleModeChange} />\r\n            <Countdown time={seconds} onKeyDown={handleKeyDown} />\r\n\r\n            <Typing numWords={words} />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}