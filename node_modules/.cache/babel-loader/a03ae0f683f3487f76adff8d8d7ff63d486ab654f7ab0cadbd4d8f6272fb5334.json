{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tung0\\\\OneDrive\\\\Documents\\\\typing-speed-app\\\\src\\\\components\\\\body\\\\Typing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { generate } from 'random-words';\nimport { toBeChecked } from '@testing-library/jest-dom/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Typing(_ref) {\n  _s();\n  let {\n    numWords\n  } = _ref;\n  const [words, setWords] = useState([]);\n  const [currInput, setCurrInput] = useState([]);\n  const [char, setChar] = useState(\"\");\n  const [currWord, setCurrWord] = useState(0);\n  const [currIndex, setCurrIndex] = useState(-1);\n  useEffect(() => {\n    setWords(generateWords());\n  }, [numWords]);\n  function generateWords(n) {\n    return new Array(numWords).fill(null).map(() => generate());\n  }\n  let keyCode = 0;\n  const handleKeyDown = event => {\n    keyCode = event.keyCode;\n    if (keyCode === 32) {\n      setCurrInput([]);\n      setCurrWord(prevState => prevState + 1);\n      setCurrIndex(-1);\n      setChar(\"space\");\n    } else if (keyCode === 8) {\n      if (currInput !== []) {\n        setCurrInput(currInput => currInput.slice(0, -1));\n        setCurrIndex(index => {\n          if (index >= 0) {\n            return index - 1;\n          } else {\n            return -1;\n          }\n        });\n        setChar(\"backspace\");\n      }\n    } else if (keyCode >= 65 && keyCode <= 90) {\n      let chrCode = keyCode - 48 * Math.floor(keyCode / 48);\n      let chr = String.fromCharCode(96 <= keyCode ? chrCode : keyCode);\n      setChar(chr.toLowerCase());\n      setCurrInput(Input => [...Input, chr.toLowerCase()]);\n      setCurrIndex(Index => Index + 1);\n    }\n  };\n  function injectExtraWords(words, currIndex, currWord, currInput, char) {\n    var _words$currWord, _words$currWord2;\n    let space = document.createElement(\"span\");\n    space.appendChild(document.createTextNode(\" \"));\n    if (char !== \"backspace\" && currIndex >= ((_words$currWord = words[currWord]) === null || _words$currWord === void 0 ? void 0 : _words$currWord.length)) {\n      let element = document.createElement(\"span\");\n      element.key = currIndex + 1;\n      element.id = `${currWord}-${currIndex}`;\n      element.className = \"word-incorrect\";\n      element.onKeyDown = \"handleKeyDown\";\n      element.appendChild(document.createTextNode(`${currInput[currInput.length - 1]}`));\n      const currWordElement = document.getElementById(currWord);\n      if (currWordElement) {\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.appendChild(element);\n        currWordElement.appendChild(space);\n      }\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).appendChild(element);\n      document.getElementById(currWord).appendChild(space);\n    } else if (char === \"backspace\" && currIndex >= ((_words$currWord2 = words[currWord]) === null || _words$currWord2 === void 0 ? void 0 : _words$currWord2.length) - 1) {\n      const currWordElement = document.getElementById(currWord);\n      if (currWordElement) {\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.appendChild(space);\n      }\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).appendChild(space);\n    }\n  }\n  function changeColor() {\n    let element = document.getElementById(`${currWord}-${currIndex}`);\n    console.log(currWord, currIndex);\n    // console.log(element.innerHTML)\n    if (char === \"backspace\") {\n      let element2 = document.getElementById(`${currWord}-${currIndex + 1}`);\n      if (element2) {\n        element2.className = \"word-unrendered\";\n      }\n    } else {\n      if (element) {\n        element.className = `word-${checkMatch(char)}`;\n      }\n    }\n  }\n  useEffect(() => {\n    injectExtraWords(words, currIndex, currWord, currInput, char);\n  }, [currInput]);\n  useEffect(() => {\n    changeColor();\n  }, [currInput]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    console.log('A key was pressed: ', currInput, char, words[currWord], currIndex);\n  }, [currInput]);\n  function checkMatch(char) {\n    var _words$currWord3;\n    if (currIndex >= ((_words$currWord3 = words[currWord]) === null || _words$currWord3 === void 0 ? void 0 : _words$currWord3.length)) {\n      return \"redundant\";\n    }\n    if (words[currWord][currIndex] === char) {\n      return \"correct\";\n    } else {\n      return \"incorrect\";\n    }\n  }\n  const startIndex = Math.max(currWord - 2, 0);\n  const endIndex = Math.min(startIndex + 60, numWords);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing--section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt\",\n        children: words.slice(startIndex, endIndex).map((word, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `${i + startIndex}`,\n          children: [word.split(\"\").map((char, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: `${i + startIndex}-${idx}`,\n              className: currIndex === idx && currWord === i + startIndex ? `word-${checkMatch(char)}` : '',\n              children: char\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(Typing, \"IhPh1Xr6rxXeI4wjt+Gv0Lxt+H8=\");\n_c = Typing;\nvar _c;\n$RefreshReg$(_c, \"Typing\");","map":{"version":3,"names":["React","useState","useEffect","generate","toBeChecked","jsxDEV","_jsxDEV","Fragment","_Fragment","Typing","_ref","_s","numWords","words","setWords","currInput","setCurrInput","char","setChar","currWord","setCurrWord","currIndex","setCurrIndex","generateWords","n","Array","fill","map","keyCode","handleKeyDown","event","prevState","slice","index","chrCode","Math","floor","chr","String","fromCharCode","toLowerCase","Input","Index","injectExtraWords","_words$currWord","_words$currWord2","space","document","createElement","appendChild","createTextNode","length","element","key","id","className","onKeyDown","currWordElement","getElementById","removeChild","lastChild","changeColor","console","log","element2","checkMatch","window","addEventListener","removeEventListener","_words$currWord3","startIndex","max","endIndex","min","children","word","i","split","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/src/components/body/Typing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { generate } from 'random-words'\r\nimport { toBeChecked } from '@testing-library/jest-dom/matchers'\r\n\r\nexport default function Typing({ numWords }) {\r\n    const [words, setWords] = useState([])\r\n    const [currInput, setCurrInput] = useState([])\r\n    const [char, setChar] = useState(\"\")\r\n    const [currWord, setCurrWord] = useState(0)\r\n    const [currIndex, setCurrIndex] = useState(-1)\r\n    \r\n\r\n    useEffect(() => {\r\n        setWords(generateWords())\r\n    }, [numWords])\r\n\r\n    function generateWords(n) {\r\n        return new Array(numWords).fill(null).map(() => generate())\r\n    }\r\n\r\n    let keyCode = 0;\r\n\r\n    const handleKeyDown = (event) => {\r\n        keyCode = event.keyCode;\r\n        if (keyCode === 32) {\r\n            setCurrInput([])\r\n            setCurrWord(prevState => prevState + 1)\r\n            setCurrIndex(-1)\r\n            setChar(\"space\")\r\n        }\r\n        else if (keyCode === 8) {\r\n            if (currInput !== []) {\r\n                setCurrInput(currInput => currInput.slice(0, -1))\r\n                setCurrIndex((index) => {\r\n                    if (index >= 0) {\r\n                        return index - 1\r\n                    }\r\n                    else {\r\n                        return -1\r\n                    }\r\n                })\r\n                setChar(\"backspace\")\r\n            }\r\n\r\n        }\r\n        else if (keyCode >= 65 && keyCode <= 90) {\r\n            let chrCode = keyCode - 48 * Math.floor(keyCode / 48);\r\n            let chr = String.fromCharCode((96 <= keyCode) ? chrCode : keyCode);\r\n            setChar(chr.toLowerCase())\r\n            setCurrInput(Input => [...Input, chr.toLowerCase()])\r\n            setCurrIndex(Index => Index + 1)\r\n        }\r\n\r\n    };\r\n\r\n\r\n    function injectExtraWords(words, currIndex, currWord, currInput, char) {\r\n        let space = document.createElement(\"span\")\r\n        space.appendChild(\r\n            document.createTextNode(\" \"))\r\n        if (char !== \"backspace\" && currIndex >= words[currWord]?.length) {\r\n\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.key = currIndex + 1\r\n            element.id = `${currWord}-${currIndex}`\r\n            element.className = \"word-incorrect\"\r\n            element.onKeyDown = \"handleKeyDown\"\r\n\r\n            element.appendChild(\r\n                document.createTextNode(`${currInput[currInput.length - 1]}`)\r\n            )\r\n            const currWordElement = document.getElementById(currWord);\r\n            if (currWordElement) {\r\n                currWordElement.removeChild(currWordElement.lastChild);\r\n                currWordElement.appendChild(element);\r\n                currWordElement.appendChild(space);\r\n            }\r\n            document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild)\r\n            document.getElementById(currWord).appendChild(element)\r\n            document.getElementById(currWord).appendChild(space)\r\n\r\n\r\n\r\n        }\r\n        else if (char === \"backspace\" && currIndex >= words[currWord]?.length - 1) {\r\n            const currWordElement = document.getElementById(currWord);\r\n            if (currWordElement) {\r\n                currWordElement.removeChild(currWordElement.lastChild);\r\n                currWordElement.removeChild(currWordElement.lastChild);\r\n                currWordElement.appendChild(space);\r\n            }\r\n            document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild)\r\n            document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild)\r\n            document.getElementById(currWord).appendChild(space)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    function changeColor() {\r\n\r\n        let element = document.getElementById(`${currWord}-${currIndex}`)\r\n        console.log(currWord, currIndex)\r\n        // console.log(element.innerHTML)\r\n        if (char === \"backspace\") {\r\n            let element2 = document.getElementById(`${currWord}-${currIndex + 1}`)\r\n            if (element2) {\r\n                element2.className = \"word-unrendered\"\r\n            }\r\n        }\r\n        else {\r\n            if (element) {\r\n                element.className = `word-${checkMatch(char)}`\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        injectExtraWords(words, currIndex, currWord, currInput, char)\r\n\r\n\r\n    }, [currInput])\r\n\r\n    useEffect(() => {\r\n        changeColor()\r\n    }, [currInput])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('A key was pressed: ', currInput, char, words[currWord], currIndex);\r\n    }, [currInput]);\r\n\r\n\r\n    function checkMatch(char) {\r\n        if (currIndex >= words[currWord]?.length) {\r\n            return \"redundant\"\r\n        }\r\n\r\n        if (words[currWord][currIndex] === char) {\r\n            return \"correct\"\r\n        } else {\r\n            return \"incorrect\"\r\n        }\r\n    }\r\n    const startIndex = Math.max(currWord - 2, 0);\r\n  const endIndex = Math.min(startIndex + 60, numWords);\r\n\r\n    return (\r\n        <div>\r\n            <div className='typing--section'>\r\n                <div className=\"prompt\">\r\n                    {words.slice(startIndex, endIndex).map((word, i) => (\r\n                    <span key={i} id={`${i + startIndex}`}>\r\n\r\n                        {word.split(\"\").map((char, idx) => (\r\n                            <>\r\n                                <span key={idx} id={`${i + startIndex}-${idx}`} className={\r\n                    currIndex === idx && currWord === i + startIndex\r\n                      ? `word-${checkMatch(char)}`\r\n                      : ''\r\n                  }>{char}</span>\r\n                                {/* < Character class= */}\r\n                            </>\r\n\r\n                        ))}\r\n                        <span> </span>\r\n\r\n                    </span>\r\n                    )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </ div>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}