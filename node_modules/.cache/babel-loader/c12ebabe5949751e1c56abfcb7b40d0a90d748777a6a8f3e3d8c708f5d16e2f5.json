{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveStyle = toHaveStyle;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _utils = require(\"./utils\");\nfunction getStyleDeclaration(document, css) {\n  const styles = {}; // The next block is necessary to normalize colors\n\n  const copy = document.createElement('div');\n  Object.keys(css).forEach(property => {\n    copy.style[property] = css[property];\n    styles[property] = copy.style[property];\n  });\n  return styles;\n}\nfunction isSubset(styles, computedStyle) {\n  return !!Object.keys(styles).length && Object.entries(styles).every(_ref => {\n    let [prop, value] = _ref;\n    return computedStyle[prop] === value || computedStyle.getPropertyValue(prop.toLowerCase()) === value;\n  });\n}\nfunction printoutStyles(styles) {\n  return Object.keys(styles).sort().map(prop => `${prop}: ${styles[prop]};`).join('\\n');\n} // Highlights only style rules that were expected but were not found in the\n// received computed styles\n\nfunction expectedDiff(diffFn, expected, computedStyles) {\n  const received = Array.from(computedStyles).filter(prop => expected[prop] !== undefined).reduce((obj, prop) => Object.assign(obj, {\n    [prop]: computedStyles.getPropertyValue(prop)\n  }), {});\n  const diffOutput = diffFn(printoutStyles(expected), printoutStyles(received)); // Remove the \"+ Received\" annotation because this is a one-way diff\n\n  return diffOutput.replace(`${_chalk.default.red('+ Received')}\\n`, '');\n}\nfunction toHaveStyle(htmlElement, css) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveStyle, this);\n  const parsedCSS = typeof css === 'object' ? css : (0, _utils.parseCSS)(css, toHaveStyle, this);\n  const {\n    getComputedStyle\n  } = htmlElement.ownerDocument.defaultView;\n  const expected = getStyleDeclaration(htmlElement.ownerDocument, parsedCSS);\n  const received = getComputedStyle(htmlElement);\n  return {\n    pass: isSubset(expected, received),\n    message: () => {\n      const matcher = `${this.isNot ? '.not' : ''}.toHaveStyle`;\n      return [this.utils.matcherHint(matcher, 'element', ''), expectedDiff(this.utils.diff, expected, received)].join('\\n\\n');\n    }\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","toHaveStyle","_chalk","_utils","getStyleDeclaration","document","css","styles","copy","createElement","keys","forEach","property","style","isSubset","computedStyle","length","entries","every","_ref","prop","getPropertyValue","toLowerCase","printoutStyles","sort","map","join","expectedDiff","diffFn","expected","computedStyles","received","Array","from","filter","undefined","reduce","obj","assign","diffOutput","replace","default","red","htmlElement","checkHtmlElement","parsedCSS","parseCSS","getComputedStyle","ownerDocument","defaultView","pass","message","matcher","isNot","utils","matcherHint","diff"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/@testing-library/jest-dom/dist/to-have-style.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveStyle = toHaveStyle;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _utils = require(\"./utils\");\n\nfunction getStyleDeclaration(document, css) {\n  const styles = {}; // The next block is necessary to normalize colors\n\n  const copy = document.createElement('div');\n  Object.keys(css).forEach(property => {\n    copy.style[property] = css[property];\n    styles[property] = copy.style[property];\n  });\n  return styles;\n}\n\nfunction isSubset(styles, computedStyle) {\n  return !!Object.keys(styles).length && Object.entries(styles).every(([prop, value]) => computedStyle[prop] === value || computedStyle.getPropertyValue(prop.toLowerCase()) === value);\n}\n\nfunction printoutStyles(styles) {\n  return Object.keys(styles).sort().map(prop => `${prop}: ${styles[prop]};`).join('\\n');\n} // Highlights only style rules that were expected but were not found in the\n// received computed styles\n\n\nfunction expectedDiff(diffFn, expected, computedStyles) {\n  const received = Array.from(computedStyles).filter(prop => expected[prop] !== undefined).reduce((obj, prop) => Object.assign(obj, {\n    [prop]: computedStyles.getPropertyValue(prop)\n  }), {});\n  const diffOutput = diffFn(printoutStyles(expected), printoutStyles(received)); // Remove the \"+ Received\" annotation because this is a one-way diff\n\n  return diffOutput.replace(`${_chalk.default.red('+ Received')}\\n`, '');\n}\n\nfunction toHaveStyle(htmlElement, css) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveStyle, this);\n  const parsedCSS = typeof css === 'object' ? css : (0, _utils.parseCSS)(css, toHaveStyle, this);\n  const {\n    getComputedStyle\n  } = htmlElement.ownerDocument.defaultView;\n  const expected = getStyleDeclaration(htmlElement.ownerDocument, parsedCSS);\n  const received = getComputedStyle(htmlElement);\n  return {\n    pass: isSubset(expected, received),\n    message: () => {\n      const matcher = `${this.isNot ? '.not' : ''}.toHaveStyle`;\n      return [this.utils.matcherHint(matcher, 'element', ''), expectedDiff(this.utils.diff, expected, received)].join('\\n\\n');\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}