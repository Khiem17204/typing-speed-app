{"ast":null,"code":"/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n;\n(function (root, factory) {\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof exports == 'object') {\n    // For Node.js.\n    module.exports = factory(root);\n  } else if (typeof define == 'function' && define.amd) {\n    // For AMD. Register as an anonymous module.\n    define([], factory.bind(root, root));\n  } else {\n    // For browser globals (not exposing the function separately).\n    factory(root);\n  }\n})(typeof global != 'undefined' ? global : this, function (root) {\n  if (root.CSS && root.CSS.escape) {\n    return root.CSS.escape;\n  }\n\n  // https://drafts.csswg.org/cssom/#serialize-an-identifier\n  var cssEscape = function (value) {\n    if (arguments.length == 0) {\n      throw new TypeError('`CSS.escape` requires an argument.');\n    }\n    var string = String(value);\n    var length = string.length;\n    var index = -1;\n    var codeUnit;\n    var result = '';\n    var firstCodeUnit = string.charCodeAt(0);\n    while (++index < length) {\n      codeUnit = string.charCodeAt(index);\n      // Note: there’s no need to special-case astral symbols, surrogate\n      // pairs, or lone surrogates.\n\n      // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER\n      // (U+FFFD).\n      if (codeUnit == 0x0000) {\n        result += '\\uFFFD';\n        continue;\n      }\n      if (\n      // If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n      // U+007F, […]\n      codeUnit >= 0x0001 && codeUnit <= 0x001F || codeUnit == 0x007F ||\n      // If the character is the first character and is in the range [0-9]\n      // (U+0030 to U+0039), […]\n      index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n      // If the character is the second character and is in the range [0-9]\n      // (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\n      index == 1 && codeUnit >= 0x0030 && codeUnit <= 0x0039 && firstCodeUnit == 0x002D) {\n        // https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n        result += '\\\\' + codeUnit.toString(16) + ' ';\n        continue;\n      }\n      if (\n      // If the character is the first character and is a `-` (U+002D), and\n      // there is no second character, […]\n      index == 0 && length == 1 && codeUnit == 0x002D) {\n        result += '\\\\' + string.charAt(index);\n        continue;\n      }\n\n      // If the character is not handled by one of the above rules and is\n      // greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n      // is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n      // U+005A), or [a-z] (U+0061 to U+007A), […]\n      if (codeUnit >= 0x0080 || codeUnit == 0x002D || codeUnit == 0x005F || codeUnit >= 0x0030 && codeUnit <= 0x0039 || codeUnit >= 0x0041 && codeUnit <= 0x005A || codeUnit >= 0x0061 && codeUnit <= 0x007A) {\n        // the character itself\n        result += string.charAt(index);\n        continue;\n      }\n\n      // Otherwise, the escaped character.\n      // https://drafts.csswg.org/cssom/#escape-a-character\n      result += '\\\\' + string.charAt(index);\n    }\n    return result;\n  };\n  if (!root.CSS) {\n    root.CSS = {};\n  }\n  root.CSS.escape = cssEscape;\n  return cssEscape;\n});","map":{"version":3,"names":["root","factory","exports","module","define","amd","bind","global","CSS","escape","cssEscape","value","arguments","length","TypeError","string","String","index","codeUnit","result","firstCodeUnit","charCodeAt","toString","charAt"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/css.escape/css.escape.js"],"sourcesContent":["/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n;(function(root, factory) {\n\t// https://github.com/umdjs/umd/blob/master/returnExports.js\n\tif (typeof exports == 'object') {\n\t\t// For Node.js.\n\t\tmodule.exports = factory(root);\n\t} else if (typeof define == 'function' && define.amd) {\n\t\t// For AMD. Register as an anonymous module.\n\t\tdefine([], factory.bind(root, root));\n\t} else {\n\t\t// For browser globals (not exposing the function separately).\n\t\tfactory(root);\n\t}\n}(typeof global != 'undefined' ? global : this, function(root) {\n\n\tif (root.CSS && root.CSS.escape) {\n\t\treturn root.CSS.escape;\n\t}\n\n\t// https://drafts.csswg.org/cssom/#serialize-an-identifier\n\tvar cssEscape = function(value) {\n\t\tif (arguments.length == 0) {\n\t\t\tthrow new TypeError('`CSS.escape` requires an argument.');\n\t\t}\n\t\tvar string = String(value);\n\t\tvar length = string.length;\n\t\tvar index = -1;\n\t\tvar codeUnit;\n\t\tvar result = '';\n\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\twhile (++index < length) {\n\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t// pairs, or lone surrogates.\n\n\t\t\t// If the character is NULL (U+0000), then the REPLACEMENT CHARACTER\n\t\t\t// (U+FFFD).\n\t\t\tif (codeUnit == 0x0000) {\n\t\t\t\tresult += '\\uFFFD';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t// U+007F, […]\n\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t(\n\t\t\t\t\tindex == 1 &&\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\tfirstCodeUnit == 0x002D\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is the first character and is a `-` (U+002D), and\n\t\t\t\t// there is no second character, […]\n\t\t\t\tindex == 0 &&\n\t\t\t\tlength == 1 &&\n\t\t\t\tcodeUnit == 0x002D\n\t\t\t) {\n\t\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\tif (\n\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\tcodeUnit == 0x002D ||\n\t\t\t\tcodeUnit == 0x005F ||\n\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t) {\n\t\t\t\t// the character itself\n\t\t\t\tresult += string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Otherwise, the escaped character.\n\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\n\t\t}\n\t\treturn result;\n\t};\n\n\tif (!root.CSS) {\n\t\troot.CSS = {};\n\t}\n\n\troot.CSS.escape = cssEscape;\n\treturn cssEscape;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}