{"ast":null,"code":"'use strict';\n\nvar SockJS = require('sockjs-client/dist/sockjs');\nvar retries = 0;\nvar sock = null;\nvar socket = function initSocket(url, handlers) {\n  sock = new SockJS(url);\n  sock.onopen = function onopen() {\n    retries = 0;\n  };\n  sock.onclose = function onclose() {\n    if (retries === 0) {\n      handlers.close();\n    }\n\n    // Try to reconnect.\n    sock = null;\n\n    // After 10 retries stop trying, to prevent logspam.\n    if (retries <= 10) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      setTimeout(function () {\n        socket(url, handlers);\n      }, retryInMs);\n    }\n  };\n  sock.onmessage = function onmessage(e) {\n    // This assumes that all data sent via the websocket is JSON.\n    var msg = JSON.parse(e.data);\n    if (handlers[msg.type]) {\n      handlers[msg.type](msg.data);\n    }\n  };\n};\nmodule.exports = socket;","map":{"version":3,"names":["SockJS","require","retries","sock","socket","initSocket","url","handlers","onopen","onclose","close","retryInMs","Math","pow","random","setTimeout","onmessage","e","msg","JSON","parse","data","type","module","exports"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/webpack-dev-server/client/socket.js"],"sourcesContent":["'use strict';\r\n\r\nvar SockJS = require('sockjs-client/dist/sockjs');\r\n\r\nvar retries = 0;\r\nvar sock = null;\r\n\r\nvar socket = function initSocket(url, handlers) {\r\n  sock = new SockJS(url);\r\n\r\n  sock.onopen = function onopen() {\r\n    retries = 0;\r\n  };\r\n\r\n  sock.onclose = function onclose() {\r\n    if (retries === 0) {\r\n      handlers.close();\r\n    }\r\n\r\n    // Try to reconnect.\r\n    sock = null;\r\n\r\n    // After 10 retries stop trying, to prevent logspam.\r\n    if (retries <= 10) {\r\n      // Exponentially increase timeout to reconnect.\r\n      // Respectfully copied from the package `got`.\r\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\r\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\r\n      retries += 1;\r\n\r\n      setTimeout(function () {\r\n        socket(url, handlers);\r\n      }, retryInMs);\r\n    }\r\n  };\r\n\r\n  sock.onmessage = function onmessage(e) {\r\n    // This assumes that all data sent via the websocket is JSON.\r\n    var msg = JSON.parse(e.data);\r\n    if (handlers[msg.type]) {\r\n      handlers[msg.type](msg.data);\r\n    }\r\n  };\r\n};\r\n\r\nmodule.exports = socket;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAEjD,IAAIC,OAAO,GAAG,CAAC;AACf,IAAIC,IAAI,GAAG,IAAI;AAEf,IAAIC,MAAM,GAAG,SAASC,UAAUA,CAACC,GAAG,EAAEC,QAAQ,EAAE;EAC9CJ,IAAI,GAAG,IAAIH,MAAM,CAACM,GAAG,CAAC;EAEtBH,IAAI,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC9BN,OAAO,GAAG,CAAC;EACb,CAAC;EAEDC,IAAI,CAACM,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;IAChC,IAAIP,OAAO,KAAK,CAAC,EAAE;MACjBK,QAAQ,CAACG,KAAK,CAAC,CAAC;IAClB;;IAEA;IACAP,IAAI,GAAG,IAAI;;IAEX;IACA,IAAID,OAAO,IAAI,EAAE,EAAE;MACjB;MACA;MACA;MACA,IAAIS,SAAS,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEX,OAAO,CAAC,GAAGU,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;MACjEZ,OAAO,IAAI,CAAC;MAEZa,UAAU,CAAC,YAAY;QACrBX,MAAM,CAACE,GAAG,EAAEC,QAAQ,CAAC;MACvB,CAAC,EAAEI,SAAS,CAAC;IACf;EACF,CAAC;EAEDR,IAAI,CAACa,SAAS,GAAG,SAASA,SAASA,CAACC,CAAC,EAAE;IACrC;IACA,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,IAAI,CAAC;IAC5B,IAAId,QAAQ,CAACW,GAAG,CAACI,IAAI,CAAC,EAAE;MACtBf,QAAQ,CAACW,GAAG,CAACI,IAAI,CAAC,CAACJ,GAAG,CAACG,IAAI,CAAC;IAC9B;EACF,CAAC;AACH,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGpB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}