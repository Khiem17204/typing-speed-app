{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toContainHTML = toContainHTML;\nvar _utils = require(\"./utils\");\nfunction getNormalizedHtml(container, htmlText) {\n  const div = container.ownerDocument.createElement('div');\n  div.innerHTML = htmlText;\n  return div.innerHTML;\n}\nfunction toContainHTML(container, htmlText) {\n  (0, _utils.checkHtmlElement)(container, toContainHTML, this);\n  if (typeof htmlText !== 'string') {\n    throw new Error(`.toContainHTML() expects a string value, got ${htmlText}`);\n  }\n  return {\n    pass: container.outerHTML.includes(getNormalizedHtml(container, htmlText)),\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toContainHTML`, 'element', ''), 'Expected:',\n      // eslint-disable-next-line @babel/new-cap\n      `  ${this.utils.EXPECTED_COLOR(htmlText)}`, 'Received:', `  ${this.utils.printReceived(container.cloneNode(true))}`].join('\\n');\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toContainHTML","_utils","require","getNormalizedHtml","container","htmlText","div","ownerDocument","createElement","innerHTML","checkHtmlElement","Error","pass","outerHTML","includes","message","utils","matcherHint","isNot","EXPECTED_COLOR","printReceived","cloneNode","join"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/@testing-library/jest-dom/dist/to-contain-html.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toContainHTML = toContainHTML;\n\nvar _utils = require(\"./utils\");\n\nfunction getNormalizedHtml(container, htmlText) {\n  const div = container.ownerDocument.createElement('div');\n  div.innerHTML = htmlText;\n  return div.innerHTML;\n}\n\nfunction toContainHTML(container, htmlText) {\n  (0, _utils.checkHtmlElement)(container, toContainHTML, this);\n\n  if (typeof htmlText !== 'string') {\n    throw new Error(`.toContainHTML() expects a string value, got ${htmlText}`);\n  }\n\n  return {\n    pass: container.outerHTML.includes(getNormalizedHtml(container, htmlText)),\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toContainHTML`, 'element', ''), 'Expected:', // eslint-disable-next-line @babel/new-cap\n      `  ${this.utils.EXPECTED_COLOR(htmlText)}`, 'Received:', `  ${this.utils.printReceived(container.cloneNode(true))}`].join('\\n');\n    }\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,aAAa,GAAGA,aAAa;AAErC,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASC,iBAAiBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,GAAG,GAAGF,SAAS,CAACG,aAAa,CAACC,aAAa,CAAC,KAAK,CAAC;EACxDF,GAAG,CAACG,SAAS,GAAGJ,QAAQ;EACxB,OAAOC,GAAG,CAACG,SAAS;AACtB;AAEA,SAAST,aAAaA,CAACI,SAAS,EAAEC,QAAQ,EAAE;EAC1C,CAAC,CAAC,EAAEJ,MAAM,CAACS,gBAAgB,EAAEN,SAAS,EAAEJ,aAAa,EAAE,IAAI,CAAC;EAE5D,IAAI,OAAOK,QAAQ,KAAK,QAAQ,EAAE;IAChC,MAAM,IAAIM,KAAK,CAAE,gDAA+CN,QAAS,EAAC,CAAC;EAC7E;EAEA,OAAO;IACLO,IAAI,EAAER,SAAS,CAACS,SAAS,CAACC,QAAQ,CAACX,iBAAiB,CAACC,SAAS,EAAEC,QAAQ,CAAC,CAAC;IAC1EU,OAAO,EAAEA,CAAA,KAAM;MACb,OAAO,CAAC,IAAI,CAACC,KAAK,CAACC,WAAW,CAAE,GAAE,IAAI,CAACC,KAAK,GAAG,MAAM,GAAG,EAAG,gBAAe,EAAE,SAAS,EAAE,EAAE,CAAC,EAAE,WAAW;MAAE;MACxG,KAAI,IAAI,CAACF,KAAK,CAACG,cAAc,CAACd,QAAQ,CAAE,EAAC,EAAE,WAAW,EAAG,KAAI,IAAI,CAACW,KAAK,CAACI,aAAa,CAAChB,SAAS,CAACiB,SAAS,CAAC,IAAI,CAAC,CAAE,EAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACjI;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}