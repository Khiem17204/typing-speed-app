{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tung0\\\\OneDrive\\\\Documents\\\\typing-speed-app\\\\src\\\\components\\\\body\\\\Typing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { generate } from 'random-words';\nimport { toBeChecked } from '@testing-library/jest-dom/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Typing(_ref) {\n  _s();\n  let {\n    numWords\n  } = _ref;\n  const [words, setWords] = useState([]);\n  const [currInput, setCurrInput] = useState([]);\n  const [char, setChar] = useState(\"\");\n  const [currWord, setCurrWord] = useState(0);\n  const [currIndex, setCurrIndex] = useState(-1);\n  const [completedLines, setCompletedLines] = useState(0);\n  useEffect(() => {\n    setWords(generateWords());\n  }, [numWords]);\n  function generateWords(n) {\n    return new Array(numWords).fill(null).map(() => generate());\n  }\n  let keyCode = 0;\n  const handleKeyDown = event => {\n    keyCode = event.keyCode;\n    if (keyCode === 32) {\n      setCurrInput([]);\n      setCurrWord(prevState => prevState + 1);\n      setCurrIndex(-1);\n      setChar('space');\n      if ((currWord + 1) % 7 === 0) {\n        setCompletedLines(prevState => prevState + 1);\n      }\n    } else if (keyCode === 8) {\n      if (currInput.length !== 0) {\n        setCurrInput(currInput => currInput.slice(0, -1));\n        setCurrIndex(index => {\n          if (index >= 0) {\n            return index - 1;\n          } else {\n            return -1;\n          }\n        });\n        setChar('backspace');\n      }\n    } else if (keyCode >= 65 && keyCode <= 90) {\n      let chrCode = keyCode - 48 * Math.floor(keyCode / 48);\n      let chr = String.fromCharCode(96 <= keyCode ? chrCode : keyCode);\n      setChar(chr.toLowerCase());\n      setCurrInput(Input => [...Input, chr.toLowerCase()]);\n      setCurrIndex(Index => Index + 1);\n    }\n  };\n  function injectExtraWords(words, currIndex, currWord, currInput, char) {\n    var _words$currWord, _words$currWord2;\n    let space = document.createElement(\"span\");\n    space.appendChild(document.createTextNode(\" \"));\n    if (char !== \"backspace\" && currIndex >= ((_words$currWord = words[currWord]) === null || _words$currWord === void 0 ? void 0 : _words$currWord.length)) {\n      let element = document.createElement(\"span\");\n      element.key = currIndex + 1;\n      element.id = `${currWord}-${currIndex}`;\n      element.className = \"word-incorrect\";\n      element.onKeyDown = \"handleKeyDown\";\n      element.appendChild(document.createTextNode(`${currInput[currInput.length - 1]}`));\n      const currWordElement = document.getElementById(currWord);\n      if (currWordElement) {\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.appendChild(element);\n        currWordElement.appendChild(space);\n      }\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).appendChild(element);\n      document.getElementById(currWord).appendChild(space);\n    } else if (char === \"backspace\" && currIndex >= ((_words$currWord2 = words[currWord]) === null || _words$currWord2 === void 0 ? void 0 : _words$currWord2.length) - 1) {\n      const currWordElement = document.getElementById(currWord);\n      if (currWordElement) {\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.removeChild(currWordElement.lastChild);\n        currWordElement.appendChild(space);\n      }\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild);\n      document.getElementById(currWord).appendChild(space);\n    }\n  }\n  function changeColor() {\n    let element = document.getElementById(`${currWord}-${currIndex}`);\n    console.log(currWord, currIndex);\n    // console.log(element.innerHTML)\n    if (char === \"backspace\") {\n      let element2 = document.getElementById(`${currWord}-${currIndex + 1}`);\n      if (element2) {\n        element2.className = \"word-unrendered\";\n      }\n    } else {\n      if (element) {\n        element.className = `word-${checkMatch(char)}`;\n      }\n    }\n  }\n  useEffect(() => {\n    if (currWord >= 60 && (currWord - completedLines * 7) % 7 === 0) {\n      setCompletedLines(lines => lines + 1);\n    }\n  }, [currWord]);\n  useEffect(() => {\n    injectExtraWords(words, currIndex, currWord, currInput, char);\n  }, [currInput]);\n  useEffect(() => {\n    changeColor();\n  }, [currInput]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    console.log('A key was pressed: ', currInput, char, words[currWord], currIndex);\n  }, [currInput]);\n  function checkMatch(char) {\n    if (currIndex >= words[currWord].length) {\n      return \"redundant\";\n    }\n    if (words[currWord][currIndex] === char) {\n      return \"correct\";\n    } else {\n      return \"incorrect\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing--section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt\",\n        children: words.slice(completedLines * 7, Math.min((completedLines + 5) * 7, words.length)).map((word, i) => {\n          const lineIndex = Math.floor((completedLines * 7 + i) / 7);\n          if (lineIndex === completedLines) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              id: `${i}`,\n              children: [word.split('').map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                id: `${i}-${idx}`,\n                className: `word-${checkMatch(char)}`,\n                children: char\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 27\n              }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 23\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              id: `${i}`,\n              children: [word.split('').map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                id: `${i}-${idx}`,\n                className: \"word-unrendered\",\n                children: char\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 27\n              }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 25\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 23\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n}\n_s(Typing, \"9r1IqR2cTMS8mmvk6nwir/yCoFY=\");\n_c = Typing;\nvar _c;\n$RefreshReg$(_c, \"Typing\");","map":{"version":3,"names":["React","useState","useEffect","generate","toBeChecked","jsxDEV","_jsxDEV","Typing","_ref","_s","numWords","words","setWords","currInput","setCurrInput","char","setChar","currWord","setCurrWord","currIndex","setCurrIndex","completedLines","setCompletedLines","generateWords","n","Array","fill","map","keyCode","handleKeyDown","event","prevState","length","slice","index","chrCode","Math","floor","chr","String","fromCharCode","toLowerCase","Input","Index","injectExtraWords","_words$currWord","_words$currWord2","space","document","createElement","appendChild","createTextNode","element","key","id","className","onKeyDown","currWordElement","getElementById","removeChild","lastChild","changeColor","console","log","element2","checkMatch","lines","window","addEventListener","removeEventListener","children","min","word","i","lineIndex","split","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/src/components/body/Typing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { generate } from 'random-words'\r\nimport { toBeChecked } from '@testing-library/jest-dom/matchers'\r\n\r\nexport default function Typing({ numWords }) {\r\n    const [words, setWords] = useState([])\r\n    const [currInput, setCurrInput] = useState([])\r\n    const [char, setChar] = useState(\"\")\r\n    const [currWord, setCurrWord] = useState(0)\r\n    const [currIndex, setCurrIndex] = useState(-1)\r\n    const [completedLines, setCompletedLines] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setWords(generateWords())\r\n    }, [numWords])\r\n\r\n    function generateWords(n) {\r\n        return new Array(numWords).fill(null).map(() => generate())\r\n    }\r\n\r\n    let keyCode = 0;\r\n\r\n    const handleKeyDown = (event) => {\r\n        keyCode = event.keyCode;\r\n        if (keyCode === 32) {\r\n          setCurrInput([]);\r\n          setCurrWord((prevState) => prevState + 1);\r\n          setCurrIndex(-1);\r\n          setChar('space');\r\n          if ((currWord + 1) % 7 === 0) {\r\n            setCompletedLines((prevState) => prevState + 1);\r\n          }\r\n        } else if (keyCode === 8) {\r\n          if (currInput.length !== 0) {\r\n            setCurrInput((currInput) => currInput.slice(0, -1));\r\n            setCurrIndex((index) => {\r\n              if (index >= 0) {\r\n                return index - 1;\r\n              } else {\r\n                return -1;\r\n              }\r\n            });\r\n            setChar('backspace');\r\n          }\r\n        } else if (keyCode >= 65 && keyCode <= 90) {\r\n          let chrCode = keyCode - 48 * Math.floor(keyCode / 48);\r\n          let chr = String.fromCharCode(96 <= keyCode ? chrCode : keyCode);\r\n          setChar(chr.toLowerCase());\r\n          setCurrInput((Input) => [...Input, chr.toLowerCase()]);\r\n          setCurrIndex((Index) => Index + 1);\r\n        }\r\n      };\r\n\r\n\r\n    function injectExtraWords(words, currIndex, currWord, currInput, char) {\r\n        let space = document.createElement(\"span\")\r\n        space.appendChild(\r\n            document.createTextNode(\" \"))\r\n        if (char !== \"backspace\" && currIndex >= words[currWord]?.length) {\r\n\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.key = currIndex + 1\r\n            element.id = `${currWord}-${currIndex}`\r\n            element.className = \"word-incorrect\"\r\n            element.onKeyDown = \"handleKeyDown\"\r\n\r\n            element.appendChild(\r\n                document.createTextNode(`${currInput[currInput.length - 1]}`)\r\n            )\r\n            const currWordElement = document.getElementById(currWord);\r\n            if (currWordElement) {\r\n                currWordElement.removeChild(currWordElement.lastChild);\r\n                currWordElement.appendChild(element);\r\n                currWordElement.appendChild(space);\r\n            }\r\n            document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild)\r\n            document.getElementById(currWord).appendChild(element)\r\n            document.getElementById(currWord).appendChild(space)\r\n\r\n\r\n\r\n        }\r\n        else if (char === \"backspace\" && currIndex >= words[currWord]?.length - 1) {\r\n            const currWordElement = document.getElementById(currWord);\r\n            if (currWordElement) {\r\n                currWordElement.removeChild(currWordElement.lastChild);\r\n                currWordElement.removeChild(currWordElement.lastChild);\r\n                currWordElement.appendChild(space);\r\n            }\r\n            document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild)\r\n            document.getElementById(currWord).removeChild(document.getElementById(currWord).lastChild)\r\n            document.getElementById(currWord).appendChild(space)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    function changeColor() {\r\n\r\n        let element = document.getElementById(`${currWord}-${currIndex}`)\r\n        console.log(currWord, currIndex)\r\n        // console.log(element.innerHTML)\r\n        if (char === \"backspace\") {\r\n            let element2 = document.getElementById(`${currWord}-${currIndex + 1}`)\r\n            if (element2) {\r\n                element2.className = \"word-unrendered\"\r\n            }\r\n        }\r\n        else {\r\n            if (element) {\r\n                element.className = `word-${checkMatch(char)}`\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currWord >= 60 && (currWord - completedLines * 7) % 7 === 0) {\r\n          setCompletedLines((lines) => lines + 1);\r\n        }\r\n      }, [currWord]);\r\n\r\n    useEffect(() => {\r\n\r\n        injectExtraWords(words, currIndex, currWord, currInput, char)\r\n\r\n\r\n    }, [currInput])\r\n\r\n    useEffect(() => {\r\n        changeColor()\r\n    }, [currInput])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('A key was pressed: ', currInput, char, words[currWord], currIndex);\r\n    }, [currInput]);\r\n\r\n\r\n    function checkMatch(char) {\r\n        if (currIndex >= words[currWord].length) {\r\n            return \"redundant\"\r\n        }\r\n\r\n        if (words[currWord][currIndex] === char) {\r\n            return \"correct\"\r\n        } else {\r\n            return \"incorrect\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"typing--section\">\r\n            <div className=\"prompt\">\r\n              {words\r\n                .slice(completedLines * 7, Math.min((completedLines + 5) * 7, words.length))\r\n                .map((word, i) => {\r\n                  const lineIndex = Math.floor((completedLines * 7 + i) / 7);\r\n                  if (lineIndex === completedLines) {\r\n                    return (\r\n                      <span key={i} id={`${i}`}>\r\n                        {word.split('').map((char, idx) => (\r\n                          <span\r\n                            key={idx}\r\n                            id={`${i}-${idx}`}\r\n                            className={`word-${checkMatch(char)}`}\r\n                          >\r\n                            {char}\r\n                          </span>\r\n                        ))}\r\n                        <span> </span>\r\n                      </span>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <span key={i} id={`${i}`}>\r\n                        {word.split('').map((char, idx) => (\r\n                          <span\r\n                            key={idx}\r\n                            id={`${i}-${idx}`}\r\n                            className=\"word-unrendered\"\r\n                          >\r\n                            {char}\r\n                          </span>\r\n                        ))}\r\n                        <span> </span>\r\n                      </span>\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n            }      "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}