{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAccessibleName = toHaveAccessibleName;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _utils = require(\"./utils\");\nfunction toHaveAccessibleName(htmlElement, expectedAccessibleName) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAccessibleName, this);\n  const actualAccessibleName = (0, _domAccessibilityApi.computeAccessibleName)(htmlElement);\n  const missingExpectedValue = arguments.length === 1;\n  let pass = false;\n  if (missingExpectedValue) {\n    // When called without an expected value we only want to validate that the element has an\n    // accessible name, whatever it may be.\n    pass = actualAccessibleName !== '';\n  } else {\n    pass = expectedAccessibleName instanceof RegExp ? expectedAccessibleName.test(actualAccessibleName) : this.equals(actualAccessibleName, expectedAccessibleName);\n  }\n  return {\n    pass,\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.${toHaveAccessibleName.name}`, 'element', ''), `Expected element ${to} have accessible name`, expectedAccessibleName, 'Received', actualAccessibleName);\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toHaveAccessibleName","_domAccessibilityApi","require","_utils","htmlElement","expectedAccessibleName","checkHtmlElement","actualAccessibleName","computeAccessibleName","missingExpectedValue","arguments","length","pass","RegExp","test","equals","message","to","isNot","getMessage","utils","matcherHint","name"],"sources":["C:/Users/tung0/OneDrive/Documents/typing-speed-app/node_modules/@testing-library/jest-dom/dist/to-have-accessible-name.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAccessibleName = toHaveAccessibleName;\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveAccessibleName(htmlElement, expectedAccessibleName) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAccessibleName, this);\n  const actualAccessibleName = (0, _domAccessibilityApi.computeAccessibleName)(htmlElement);\n  const missingExpectedValue = arguments.length === 1;\n  let pass = false;\n\n  if (missingExpectedValue) {\n    // When called without an expected value we only want to validate that the element has an\n    // accessible name, whatever it may be.\n    pass = actualAccessibleName !== '';\n  } else {\n    pass = expectedAccessibleName instanceof RegExp ? expectedAccessibleName.test(actualAccessibleName) : this.equals(actualAccessibleName, expectedAccessibleName);\n  }\n\n  return {\n    pass,\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.${toHaveAccessibleName.name}`, 'element', ''), `Expected element ${to} have accessible name`, expectedAccessibleName, 'Received', actualAccessibleName);\n    }\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB;AAEnD,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE3D,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASF,oBAAoBA,CAACI,WAAW,EAAEC,sBAAsB,EAAE;EACjE,CAAC,CAAC,EAAEF,MAAM,CAACG,gBAAgB,EAAEF,WAAW,EAAEJ,oBAAoB,EAAE,IAAI,CAAC;EACrE,MAAMO,oBAAoB,GAAG,CAAC,CAAC,EAAEN,oBAAoB,CAACO,qBAAqB,EAAEJ,WAAW,CAAC;EACzF,MAAMK,oBAAoB,GAAGC,SAAS,CAACC,MAAM,KAAK,CAAC;EACnD,IAAIC,IAAI,GAAG,KAAK;EAEhB,IAAIH,oBAAoB,EAAE;IACxB;IACA;IACAG,IAAI,GAAGL,oBAAoB,KAAK,EAAE;EACpC,CAAC,MAAM;IACLK,IAAI,GAAGP,sBAAsB,YAAYQ,MAAM,GAAGR,sBAAsB,CAACS,IAAI,CAACP,oBAAoB,CAAC,GAAG,IAAI,CAACQ,MAAM,CAACR,oBAAoB,EAAEF,sBAAsB,CAAC;EACjK;EAEA,OAAO;IACLO,IAAI;IACJI,OAAO,EAAEA,CAAA,KAAM;MACb,MAAMC,EAAE,GAAG,IAAI,CAACC,KAAK,GAAG,QAAQ,GAAG,IAAI;MACvC,OAAO,CAAC,CAAC,EAAEf,MAAM,CAACgB,UAAU,EAAE,IAAI,EAAE,IAAI,CAACC,KAAK,CAACC,WAAW,CAAE,GAAE,IAAI,CAACH,KAAK,GAAG,MAAM,GAAG,EAAG,IAAGlB,oBAAoB,CAACsB,IAAK,EAAC,EAAE,SAAS,EAAE,EAAE,CAAC,EAAG,oBAAmBL,EAAG,uBAAsB,EAAEZ,sBAAsB,EAAE,UAAU,EAAEE,oBAAoB,CAAC;IACjP;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}